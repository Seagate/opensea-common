# SPDX-License-Identifier: MPL-2.0
#
# Do NOT modify or remove this copyright and license
#
# Copyright (c) 2012-2025 Seagate Technology LLC and/or its Affiliates, All Rights Reserved
#
# This software is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# ******************************************************************************************

# Hand Written Makefile (Edit with caution) -Muhammad
# Windows, MSYS2 64-bit, MinGW 64-bit, gcc environment version - Billy

NAME = opensea-common
#Change the Major version when major interface changes are made. E.g. tDevice changes
MAJOR = 6
#Change the Minor version when new features are added.
MINOR = 0
#Change the patch version when only bug fixes are made.
PATCH = 2
VERSION = $(MAJOR).$(MINOR).$(PATCH)
SRC_DIR = ../../src/
INC_DIR = -I../../include

MYUNAME := $(shell uname -s)
ifneq (,$(findstring Linux,$(MYUNAME)))
	UNAME = MINGW64
else ifneq (,$(findstring MINGW64,$(MYUNAME)))
	UNAME = MINGW64
endif

ifneq (,$(findstring Linux,$(MYUNAME)))
	CC = x86_64-w64-mingw32-gcc
	AR = x86_64-w64-mingw32-ar
else
	CC = gcc
	AR = ar
endif

#turning off format warnings because they are EVERYWHERE but only in minGW which is due to backwards compatibility warnings.
#I tried using __USE_MINGW_ANSI_STDIO, but this didn't solve the problem either. - TJE
#https://sourceforge.net/p/mingw-w64/mailman/mingw-w64-public/thread/20120411101049.GA4263%40glandium.org/#msg29128250
CFLAGS ?= -Wall -Wextra  -Wno-format -Wno-format=
CFLAGS += -c -fPIC -I. -std=gnu99

# is this necessary? doesn't it need a <dir>?
CFLAGS += -isystem

LDFLAGS = -Wall

ifneq (,$(findstring MINGW64,$(UNAME)))
	#BR note: pragma comment(lib,"Version.lib") is not supported by gcc, use the below supply the version.lib functions
	LDFLAGS += -L/msys64/mingw64/x86_64-w64-mingw32/lib
	LDLIBS += -lversion
	LDLIBS += -lcfgmgr32
	LDLIBS += -ladvapi32
endif

LIB_SRC_FILES = \
    $(SRC_DIR)bit_manip.c\
	$(SRC_DIR)constraint_handling.c\
    $(SRC_DIR)env_detect.c\
    $(SRC_DIR)error_translation.c\
	$(SRC_DIR)io_utils.c\
	$(SRC_DIR)math_utils.c\
	$(SRC_DIR)memory_safety.c\
	$(SRC_DIR)pattern_utils.c\
	$(SRC_DIR)precision_timer.c\
	$(SRC_DIR)prng.c\
	$(SRC_DIR)safe_bsearch.c\
	$(SRC_DIR)safe_lsearch.c\
	$(SRC_DIR)safe_qsort.c\
	$(SRC_DIR)safe_strtok.c\
	$(SRC_DIR)secure_file.c\
	$(SRC_DIR)secured_env_vars.c\
	$(SRC_DIR)sleep.c\
	$(SRC_DIR)sort_and_search.c\
	$(SRC_DIR)string_utils.c\
	$(SRC_DIR)time_utils.c\
	$(SRC_DIR)type_conversion.c\
	$(SRC_DIR)unit_conversion.c\
	$(SRC_DIR)validate_format.c\
	$(SRC_DIR)windows_env_detect.c\
	$(SRC_DIR)windows_secure_file.c\
	$(SRC_DIR)windows_version_detect.c

PROJECT_DEFINES += -DENABLE_CSMI
PROJECT_DEFINES += -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -D__USE_MINGW_ANSI_STDIO

ifneq (,$(findstring MINGW64,$(UNAME)))
	#BR note: this define added to surpress gcc error with sprintf. should be made conditional to __MINGW... etc
	PROJECT_DEFINES += -DSTRSAFE_NO_DEPRECATE
	#BR note: trying different stuff during debugging
	# PROJECT_DEFINES += -D_WIN32_WINNT=0x0601
endif

#All of the source files have associated object files
LIB_OBJ_FILES = $(LIB_SRC_FILES:.c=.o)
LIBS = lib$(NAME).a

FILE_OUTPUT_DIR = lib

.PHONY: all
all: clean mkoutputdir $(LIBS)

%.o: %.c
	$(CC) $(CFLAGS) $(PROJECT_DEFINES) $(INC_DIR) $< -o $@

$(LIBS): $(LIB_OBJ_FILES)
	rm -f $(FILE_OUTPUT_DIR)/$@
	$(AR) cq $(FILE_OUTPUT_DIR)/$@ $(LIB_OBJ_FILES)

	$(CC) -shared $(LIB_OBJ_FILES) $(LDFLAGS) $(LDLIBS) -o $(FILE_OUTPUT_DIR)/lib$(NAME).so.$(VERSION)

clean:
	rm -f $(FILE_OUTPUT_DIR)/lib$(NAME).a $(FILE_OUTPUT_DIR)/lib$(NAME).so.$(VERSION) *.o $(SRC_DIR)*.o
	rm -rf $(FILE_OUTPUT_DIR)

mkoutputdir:
	mkdir -p $(FILE_OUTPUT_DIR)
